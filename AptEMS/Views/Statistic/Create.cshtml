@model AptEMS.Models.Statistic

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminDashboard.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Statistic</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- IconType Dropdown -->
    <div class="form-group">
        @Html.LabelFor(model => model.IconType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IconType,
                new SelectList(new List<string> { "Consultants", "Clients", "Placement" }),
                "Select Icon Type",
                new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IconType, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Count Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Label Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- IsActive Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <!-- Submit Button -->
    <div class="form-group">
        <button type="submit" class="btn btn-success">Create</button>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        @*@Html.ActionLink("Back to List", "Index")*@
    </div>
</div>
}


