@model AptEMS.Models.JobPost

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminDashboard.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>JobPost</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.JobPostID)

    <div class="form-group">
        @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="radio-group">
                <label>
                    @Html.RadioButtonFor(model => model.JobType, "Permanent") Permanent
                </label>
                <label>
                    @Html.RadioButtonFor(model => model.JobType, "Contract") Contract
                </label>
                <label>
                    @Html.RadioButtonFor(model => model.JobType, "Freelancer") Freelancer
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.EmploymentType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="radio-group">
                <label>
                    @Html.RadioButtonFor(model => model.EmploymentType, "Full-Time") Full-Time
                </label>
                <label>
                    @Html.RadioButtonFor(model => model.EmploymentType, "Part-Time") Part-Time
                </label>

            </div>
            @Html.ValidationMessageFor(model => model.EmploymentType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="AgreementDate">Scheduled Date</label>
        @Html.TextBoxFor(model => model.ScheduledDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.ScheduledDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduledDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <label for="AgreementDate">Last Date<span class="text-danger">*</span></label>
        @Html.TextBoxFor(model => model.ExpiryDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
    </div>
    @*<div class="form-group">
        <label class="control-label col-md-2">
            Last Date<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
        </div>
    </div>*@



    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.JobTitle)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.MinExperience)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MinExperience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinExperience, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.MaxExperience)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxExperience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxExperience, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Key Skills Field -->
    <label for="key_skills">Key Skills<span style="color:red;">*</span></label>

    @Html.DropDownListFor(model => model.Skills, new SelectList(ViewBag.Skill, "Value", "Text"), "--Select Skill--", new { @class = "form-control", style = " min-height: 40px; line-height: 1.5;" })
    @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.JobDescription)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", id = "JobDescription" })
            @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Company Address Field -->
    <label for="Current_Location">Job Location<span style="color:red;">*</span></label>
    @Html.DropDownListFor(model => model.JobLocation, new SelectList(ViewBag.Location, "Value", "Text"), "--Select Current Location--", new { @class = "form-control", style = " min-height: 40px; line-height: 1.5;" })
    @Html.ValidationMessageFor(model => model.JobLocation, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.MinSalary)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MinSalary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinSalary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.MaxSalary)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxSalary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxSalary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.Industry)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Industry, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Industry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.FunctionsAndRoles)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.FunctionsAndRoles, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FunctionsAndRoles, "", new { @class = "text-danger" })
        </div>
    </div>

    <label for="Education">Education<span style="color:red;">*</span></label>
    @Html.DropDownListFor(model => model.Education,
        new SelectList(ViewBag.Qualification, "Value", "Text"),
        "--Select Qualification Type--",
        new { @class = "form-control", style = " min-height: 40px; line-height: 1.5;" })
    @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })

    <h2>Recruiter Information:</h2>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterName)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterDesignation)<span class="text-danger">*</span>
        </label>        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterDesignation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterDesignation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterPhoneNumber)<span class="text-danger">*</span>
        </label>        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterPhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterEmail)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterCompanyName)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterCompanyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterCompanyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            @Html.DisplayNameFor(model => model.RecruiterAboutCompany)<span class="text-danger">*</span>
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecruiterAboutCompany, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecruiterAboutCompany, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-sm btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-sm btn-secondary" })
        </div>
    </div>

</div>
}

<!-- Include CKEditor Script -->
<script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>

<!-- Initialize CKEditor -->
<script>
    CKEDITOR.replace('JobDescription', {
        toolbar: [
            { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'RemoveFormat'] },
            { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'] },
            { name: 'links', items: ['Link', 'Unlink'] },
            { name: 'insert', items: ['Image', 'Table'] },
            { name: 'styles', items: ['Format', 'Font', 'FontSize'] },
            { name: 'colors', items: ['TextColor', 'BGColor'] },
            { name: 'tools', items: ['Maximize'] }
        ],
        height: 300, // Adjust height as needed
        removePlugins: 'elementspath', // Optional: Remove element path for cleaner UI
        resize_enabled: true          // Allow resizing
    });
</script>
