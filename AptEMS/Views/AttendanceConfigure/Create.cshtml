@model AptEMS.Models.AttendanceConfigure

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminDashboard.cshtml";
}

<h2>Create </h2>



<br />
<hr />



<link href="~/Content/shifts.css" rel="stylesheet" />


<div style="margin: 50px 100px 10px 100px; background-color: lightgray; border-radius: 10px; padding: 30px 0px 15px 60px">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Attendance Configure</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        <label for="CreatedBy" class="control-label col-md-2" style="white-space: nowrap;">
                            Created By<span style="color: red;"> *</span>
                        </label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    @*<div class="form-group">
            <label for="MonthName" class="control-label col-md-2" style="white-space: nowrap;">
                Month Name<span style="color: red;"> </span>
            </label>
            <div class="col-md-10">
                @Html.DropDownListFor(
                    model => model.MonthName,
                    new SelectList(new List<string>
                    {
                        "January", "February", "March", "April", "May", "June",
                        "July", "August", "September", "October", "November", "December"
                    }),
                    "---Select a Month---",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MonthName, "", new { @class = "text-danger" })
            </div>


        </div>*@

                    <div class="form-group">
                        <label for="MonthName" class="control-label col-md-2" style="white-space: nowrap;">
                            Month Name<span style="color: red;"> *</span>
                        </label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(
                                model => model.MonthName,
                                new SelectList(new List<string>
                                {
                                    "January", "February", "March", "April", "May", "June",
                                    "July", "August", "September", "October", "November", "December"
                                }),
                                "---Select a Month---",
                                new { @class = "form-control", id = "MonthName" }) <!-- Added ID -->
                            @Html.ValidationMessageFor(model => model.MonthName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>


                <div class="col-md-6">

                    @*<div class="form-group">
                            <label for="WorkingDays" class="control-label col-md-2" style="white-space: nowrap;">
                                Working Days<span style="color: red;">  </span>
                            </label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.WorkingDays, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WorkingDays, "", new { @class = "text-danger" })
                            </div>

                        </div>*@

                    <div class="form-group">
                        <label for="WorkingDays" class="control-label col-md-2" style="white-space: nowrap;">
                            Working Days<span style="color: red;"> *</span>
                        </label>
                        <div class="col-md-10">
                             @*Multi-date selection input*@ 
                            <input type="text" id="multiDatePicker" class="form-control" placeholder="Select multiple dates" />

                             @*Hidden field to store the number of selected dates*@ 
                            @Html.HiddenFor(model => model.WorkingDays, new { id = "WorkingDays" })

                            @Html.ValidationMessageFor(model => model.WorkingDays, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label for="CreatedDate" class="control-label col-md-2" style="white-space: nowrap;">
                            Created Date<span style="color: red;"> * </span>
                        </label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                        </div>

                    </div>










                </div>

            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <br />
                    <br />
                    <input type="submit" value="Create" class="btn btn-default my-create-button" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn my-custom-button" })
                </div>
            </div>




        </div>

    }




    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(document).ready(function () {
                // Initialize multi-date picker
                $('#multiDatePicker').datepicker({
                    format: "mm/dd/yyyy",       // Date format
                    multidate: true,           // Enable multiple date selection
                    todayHighlight: true,      // Highlight today's date
                    autoclose: false,          // Prevent automatic closing
                    keyboardNavigation: true   // Enable navigation with keyboard
                }).on('changeDate', function (e) {
                    // Update the count of selected dates in the hidden field
                    let selectedDates = e.dates;
                    $('#WorkingDays').val(selectedDates.length); // Set the count in the hidden field

                    // Get the last selected date
                    if (selectedDates.length > 0) {
                        let lastDate = new Date(selectedDates[selectedDates.length - 1]);

                        // Extract the month name from the last selected date
                        let monthNames = [
                            "January", "February", "March", "April", "May", "June",
                            "July", "August", "September", "October", "November", "December"
                        ];
                        let selectedMonth = monthNames[lastDate.getMonth()];

                        // Update the MonthName dropdown
                        $('#MonthName').val(selectedMonth);
                    }
                });

                // Initialize the MonthName dropdown as a select element
                $('#MonthName').change(function () {
                    let selectedMonth = $(this).val();
                    console.log("Month Name Updated to: " + selectedMonth);
                });
            });
        </script>

    }

</div>